// lib/features/workout/domain/entities/exercise_definition.dart

import 'package:equatable/equatable.dart';
import 'package:hive/hive.dart'; // Assuming Hive is used for local storage, consistent with other entities

part 'exercise_definition.g.dart'; // This line will be generated by hive_generator

@HiveType(typeId: 8) // Assign a new unique typeId for Hive
class ExerciseDefinition extends Equatable {
  @HiveField(0)
  final String id;
  @HiveField(1)
  final String name;
  @HiveField(2)
  final String category;
  @HiveField(3)
  final String? description; // Optional detailed description
  @HiveField(4)
  final String? imageUrl;    // Optional image/gif for demonstration

  // Base properties for a default set configuration in a template
  @HiveField(5)
  final int defaultSets;
  @HiveField(6)
  final int defaultReps;
  @HiveField(7)
  final double defaultWeight;
  @HiveField(8)
  final Duration? defaultRestTime; // Default rest time after this exercise

  // New field to define if it's rep-based or time-based or distance-based
  @HiveField(9)
  final ExerciseMeasurementType measurementType;

  // For time-based exercises (e.g., Plank, Wall Sit)
  @HiveField(10)
  final Duration? defaultDuration; // For time-based exercises

  // For distance-based exercises (e.g., Running, Rowing)
  @HiveField(11)
  final double? defaultDistance;
  @HiveField(12)
  final String? defaultDistanceUnit; // e.g., "km", "miles", "meters"


  const ExerciseDefinition({
    required this.id,
    required this.name,
    required this.category,
    this.description,
    this.imageUrl,
    this.defaultSets = 0,
    this.defaultReps = 0,
    this.defaultWeight = 0.0,
    this.defaultRestTime,
    this.measurementType = ExerciseMeasurementType.reps, // Default to reps
    this.defaultDuration,
    this.defaultDistance,
    this.defaultDistanceUnit,
  });

  @override
  List<Object?> get props => [
        id,
        name,
        category,
        description,
        imageUrl,
        defaultSets,
        defaultReps,
        defaultWeight,
        defaultRestTime,
        measurementType,
        defaultDuration,
        defaultDistance,
        defaultDistanceUnit,
      ];

  // For Firestore conversion
  Map<String, dynamic> toJson() => {
        'id': id,
        'name': name,
        'category': category,
        'description': description,
        'imageUrl': imageUrl,
        'defaultSets': defaultSets,
        'defaultReps': defaultReps,
        'defaultWeight': defaultWeight,
        'defaultRestTime': defaultRestTime?.inSeconds,
        'measurementType': measurementType.index,
        'defaultDuration': defaultDuration?.inSeconds,
        'defaultDistance': defaultDistance,
        'defaultDistanceUnit': defaultDistanceUnit,
      };

  factory ExerciseDefinition.fromJson(Map<String, dynamic> json) => ExerciseDefinition(
        id: json['id'],
        name: json['name'],
        category: json['category'],
        description: json['description'],
        imageUrl: json['imageUrl'],
        defaultSets: json['defaultSets'] ?? 0,
        defaultReps: json['defaultReps'] ?? 0,
        defaultWeight: json['defaultWeight']?.toDouble() ?? 0.0,
        defaultRestTime: json['defaultRestTime'] != null ? Duration(seconds: json['defaultRestTime']) : null,
        measurementType: ExerciseMeasurementType.values[json['measurementType'] ?? 0],
        defaultDuration: json['defaultDuration'] != null ? Duration(seconds: json['defaultDuration']) : null,
        defaultDistance: json['defaultDistance']?.toDouble(),
        defaultDistanceUnit: json['defaultDistanceUnit'],
      );
}

@HiveType(typeId: 9) // Assign a new unique typeId for Hive enum
enum ExerciseMeasurementType {
  @HiveField(0)
  reps,       // Measured by repetitions (e.g., Push-ups, Squats)
  @HiveField(1)
  time,       // Measured by duration (e.g., Plank, Wall Sit)
  @HiveField(2)
  distance,   // Measured by distance (e.g., Running, Rowing)
}
import 'package:equatable/equatable.dart';
import 'package:hive/hive.dart';

part 'workout.g.dart'; // This line will be generated by hive_generator

@HiveType(typeId: 3)
class Workout extends Equatable {
  @HiveField(0)
  final String id;
  @HiveField(1)
  final String userId;
  @HiveField(2)
  final String name;
  @HiveField(3)
  final WorkoutType type;
  @HiveField(4)
  final List<Exercise> exercises;
  @HiveField(5)
  final DateTime startTime;
  @HiveField(6)
  final DateTime? endTime;
  @HiveField(7)
  final Duration duration;
  @HiveField(8)
  final String? notes;
  @HiveField(9)
  final double totalWeight;
  @HiveField(10)
  final int totalSets;
  @HiveField(11)
  final int totalReps;

  const Workout({
    required this.id,
    required this.userId,
    required this.name,
    required this.type,
    required this.exercises,
    required this.startTime,
    this.endTime,
    required this.duration,
    this.notes,
    required this.totalWeight,
    required this.totalSets,
    required this.totalReps,
  });

  @override
  List<Object?> get props => [
        id,
        userId,
        name,
        type,
        exercises,
        startTime,
        endTime,
        duration,
        notes,
        totalWeight,
        totalSets,
        totalReps
      ];
}

@HiveType(typeId: 4)
enum WorkoutType {
  @HiveField(0)
  push,
  @HiveField(1)
  pull,
  @HiveField(2)
  legs,
  @HiveField(3)
  fullBody,
  @HiveField(4)
  cardio,
  @HiveField(5)
  skills,
  @HiveField(6)
  custom,
}

@HiveType(typeId: 5)
class Exercise extends Equatable {
  @HiveField(0)
  final String id;
  @HiveField(1)
  final String name;
  @HiveField(2)
  final String category;
  @HiveField(3)
  final List<ExerciseSet> sets;
  @HiveField(4)
  final String? notes;
  @HiveField(5)
  final Duration? restTime;

  const Exercise({
    required this.id,
    required this.name,
    required this.category,
    required this.sets,
    this.notes,
    this.restTime,
  });

  @override
  List<Object?> get props => [id, name, category, sets, notes, restTime];
}

@HiveType(typeId: 6)
class ExerciseSet extends Equatable {
  @HiveField(0)
  final int setNumber;
  @HiveField(1)
  final int reps;
  @HiveField(2)
  final double weight;
  @HiveField(3)
  final bool isCompleted;
  @HiveField(4)
  final SetType type;

  const ExerciseSet({
    required this.setNumber,
    required this.reps,
    required this.weight,
    required this.isCompleted,
    required this.type,
  });

  @override
  List<Object> get props => [setNumber, reps, weight, isCompleted, type];
}

@HiveType(typeId: 7)
enum SetType {
  @HiveField(0)
  normal,
  @HiveField(1)
  warmup,
  @HiveField(2)
  dropset,
  @HiveField(3)
  failure,
}